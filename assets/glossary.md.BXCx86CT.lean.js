import{_ as m,o as i,c as o,F as f,G as h,m as c,t as u,a as g,J as b}from"./chunks/framework.e0tDGBa7.js";function y(t,a){let e=a[l(t)];return e=e.replace(/:([\w+]*):([\w+]*):/g,(r,n,s)=>p(a[l(n)],s)),e=e.replace(/:([\w+]*):/g,(r,n,s)=>p(a[l(n)],n)),e}function p(t,a){let e=!0;t===void 0?(t="Term not found in the glossary",e=!1):t=_(t);const r=e?"":" term-not-found";return a=l(a),`<a title="${t}" class="term${r}">${a}</a>`}function _(t){return t.replace(/:[\w+]*:([\w+]*):/g,(a,e)=>e).replace(/:([\w+]*):/g,(a,e)=>e)}function l(t){return t.split("_").join(" ")}const k={props:{terms:{type:Object,required:!0}},methods:{definition(t){return y(t,this.terms)}}},v={class:"defined-term"},w=["innerHTML"];function x(t,a,e,r,n,s){return i(),o("dl",null,[(i(!0),o(f,null,h(Object.keys(e.terms),d=>(i(),o("div",null,[c("dt",v,u(d),1),c("dd",{class:"term-definition",innerHTML:s.definition(d,e.terms)},null,8,w)]))),256))])}const T=m(k,[["render",x]]),A={id:"frontmatter-title",tabindex:"-1"},S=c("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{ $frontmatter.title }}"'},"​",-1),G=JSON.parse(`{"title":"Glossary","description":"","frontmatter":{"title":"Glossary","terms":{"buffer":"Data of a loaded file and additional metadata, associated with one or more views. The distinction between buffer and :view: is technical. Most of the time, both terms can be used interchangeably.\\n","view":"Graphical display of a buffer. Multiple views can show the same buffer.","plugin":"A feature implemented in Python, which can consist of a single command or multiple commands. It can be contained in one or many .py files.\\n","panel":"An input/output widget, such as a search panel or output panel.\\n","overlay":"An input widget of a special kind. For example, Goto Anything is an overlay.\\n","package":"A group of resource files providing extended functionality, consisting of e.g. snippets, syntax definitions, or plugins. Can be a folder in the Packages folder or an archived .sublime-package file.\\n","user package":"A :package: installed or managed by the user.\\n","shipped package":"A :package: that is provided by Sublime Text on every installation.\\n","core package":"A :shipped_package: that provides core functionality for Sublime Text.\\n","installed package":"A :user_package: inside the Installed Packages folder in the .sublime-package archive format.\\n","override package":"A special package that can override individual resource files of an :installed_package: or :shipped_package:.\\n","file type":"In the context of Sublime Text, a file type refers to the type of file as determined by the applicable .sublime-syntax syntax definition. However, this is an ambiguous term and in some instances it could also be used with the broader meaning it has in technical texts.\\n","PackageDev":"An installable package that provides syntax highlighting, snippets, completions, and more for Sublime Text's resource files.\\n","Package Control":"The de-facto package manager for Sublime Text. <a href=\\"https://packagecontrol.io/\\">https://packagecontrol.io/</a>\\n","command":"A command is an action to be executed and can be referenced in many resource files. It may accept JSON-serializable arguments and can be defined in user plugins.\\n","Data directory":"Core concept and storage for all of Sublime Text's resources. Refer to the introduction for details.\\n","console":"Internal Sublime Text console for debug messages and plugin output. Open via *View → Show Console*.\\n"}},"headers":[],"relativePath":"glossary.md","filePath":"glossary.md","lastUpdated":1708976204000}`),$={name:"glossary.md"},O=Object.assign($,{setup(t){return(a,e)=>(i(),o("div",null,[c("h1",A,[g(u(a.$frontmatter.title)+" ",1),S]),b(T,{terms:a.$frontmatter.terms},null,8,["terms"])]))}});export{G as __pageData,O as default};
