import{_ as p,C as t,c as r,o as i,a2 as l,j as a,a as n,G as o}from"./chunks/framework.CwCSXIY0.js";const g=JSON.parse('{"title":"Key Bindings","description":"","frontmatter":{"title":"Key Bindings"},"headers":[],"relativePath":"guide/customization/key_bindings.md","filePath":"guide/customization/key_bindings.md","lastUpdated":1738542678000}'),D={name:"guide/customization/key_bindings.md"};function c(F,s,y,d,u,m){const e=t("Key");return i(),r("div",null,[s[16]||(s[16]=l(`<h1 id="key-bindings" tabindex="-1">Key Bindings <a class="header-anchor" href="#key-bindings" aria-label="Permalink to &quot;Key Bindings&quot;">​</a></h1><div class="info custom-block"><p class="custom-block-title">See Also</p><dl><dt><a href="/reference/key_bindings.html">Reference for key bindings</a></dt><dd>Complete documentation on key bindings.</dd></dl></div><p>Key bindings let you map sequences of key presses to commands.</p><h2 id="file-format" tabindex="-1">File Format <a class="header-anchor" href="#file-format" aria-label="Permalink to &quot;File Format&quot;">​</a></h2><p>Key bindings are defined in JSON and stored in <code>.sublime-keymap</code> files.</p><p>In the same package, separate keymap files for Linux, OSX and Windows may exist for better OS integration.</p><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h3><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#89DDFF;">   {</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C792EA;">keys</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ctrl+shift+n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C792EA;">command</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">new_window</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> },</span></span>
<span class="line"><span style="color:#89DDFF;">   {</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C792EA;">keys</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ctrl+o</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C792EA;">command</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">prompt_open_file</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> }</span></span>
<span class="line"><span style="color:#89DDFF;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="defining-and-overriding-key-bindings" tabindex="-1">Defining and Overriding Key Bindings <a class="header-anchor" href="#defining-and-overriding-key-bindings" aria-label="Permalink to &quot;Defining and Overriding Key Bindings&quot;">​</a></h2><p>Sublime Text ships with default key bindings (for example, <code>Packages/Default/Default (Windows).sublime-keymap)</code>. In order to override default key bindings or add new ones, use a separate keymap file with higher precedence: for example, <code>Packages/User/Default (Windows).sublime-keymap</code>.</p><h2 id="advanced-key-bindings" tabindex="-1">Advanced Key Bindings <a class="header-anchor" href="#advanced-key-bindings" aria-label="Permalink to &quot;Advanced Key Bindings&quot;">​</a></h2><p>Simple key bindings consist of a sequence of one or more keys mapped to a command. However, there are more complex syntaxes for passing arguments to commands and restricting key bindings to specific contexts.</p><h3 id="passing-arguments" tabindex="-1">Passing Arguments <a class="header-anchor" href="#passing-arguments" aria-label="Permalink to &quot;Passing Arguments&quot;">​</a></h3><p>Use the <code>args</code> key to specify arguments:</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C792EA;">keys</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">shift+enter</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C792EA;">command</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">insert</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C792EA;">args</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">characters</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#BABED8;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;"> }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,15)),a("p",null,[s[0]||(s[0]=n("Here, ")),s[1]||(s[1]=a("code",null,"\\n",-1)),s[2]||(s[2]=n(" is passed to the ")),s[3]||(s[3]=a("code",null,"insert",-1)),s[4]||(s[4]=n(" command whenever ")),o(e,{k:"shift+enter"}),s[5]||(s[5]=n(" is pressed."))]),s[17]||(s[17]=l(`<h3 id="contexts" tabindex="-1">Contexts <a class="header-anchor" href="#contexts" aria-label="Permalink to &quot;Contexts&quot;">​</a></h3><p>Contexts determine whether a given key binding is enabled based on the caret&#39;s position or some other state.</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C792EA;">keys</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">escape</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C792EA;">command</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">clear_fields</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C792EA;">context</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">   [</span></span>
<span class="line"><span style="color:#89DDFF;">      {</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#FFCB6B;">key</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">has_next_field</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#FFCB6B;">operator</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">equal</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#FFCB6B;">operand</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> true</span><span style="color:#89DDFF;"> }</span></span>
<span class="line"><span style="color:#89DDFF;">   ]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,3)),a("p",null,[s[6]||(s[6]=n("This key binding translates to ")),s[7]||(s[7]=a("em",null,"clear snippet fields and resume normal editing if there is a next snippet field available",-1)),s[8]||(s[8]=n(". Thus, pressing ")),o(e,{k:"escape"}),s[9]||(s[9]=n(" will only trigger this key binding if you are cycling through snippet fields."))]),s[18]||(s[18]=l('<p>The same key binding may be mapped to multiple contexts, so a single sequence of key presses may produce different results at different times.</p><h3 id="key-chords" tabindex="-1">Key Chords <a class="header-anchor" href="#key-chords" aria-label="Permalink to &quot;Key Chords&quot;">​</a></h3><p>You can create key bindings composed of multiple keys.</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C792EA;">keys</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ctrl+k</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">ctrl+v</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C792EA;">command</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">paste_from_history</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>',4)),a("p",null,[s[10]||(s[10]=n("Here, to trigger the command ")),s[11]||(s[11]=a("code",null,"paste_from_history",-1)),s[12]||(s[12]=n(", you have to press ")),o(e,{k:"ctrl+k"}),s[13]||(s[13]=n(" first, then release ")),o(e,{k:"k"}),s[14]||(s[14]=n(", and finally press ")),o(e,{k:"v"}),s[15]||(s[15]=n("."))]),s[19]||(s[19]=a("p",null,"Note: This example is a default key binding, so you can try it out for yourself.",-1))])}const q=p(D,[["render",c]]);export{g as __pageData,q as default};
