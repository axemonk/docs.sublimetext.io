import{_ as t,C as r,c as p,o as c,a2 as n,j as l,a,G as e}from"./chunks/framework.CwCSXIY0.js";const h=JSON.parse('{"title":"Macros","description":"","frontmatter":{"title":"Macros"},"headers":[],"relativePath":"guide/extensibility/macros.md","filePath":"guide/extensibility/macros.md","lastUpdated":1738542678000}'),i={name:"guide/extensibility/macros.md"};function D(d,s,F,y,u,m){const o=r("Key");return c(),p("div",null,[s[5]||(s[5]=n('<h1 id="macros" tabindex="-1">Macros <a class="header-anchor" href="#macros" aria-label="Permalink to &quot;Macros&quot;">​</a></h1><p>Macros are a basic automation facility comprising sequences of commands. Use them whenever you need to repeat the exact same steps to perform an operation.</p><p>Macro files are JSON files with the extension <code>.sublime-macro</code>. Sublime Text ships with a few macros providing core functionality, such as line and word deletion. You can find these under <strong>Tools | Macros</strong> or in <code>Packages/Default</code>.</p><h2 id="how-to-record-macros" tabindex="-1">How to Record Macros <a class="header-anchor" href="#how-to-record-macros" aria-label="Permalink to &quot;How to Record Macros&quot;">​</a></h2>',4)),l("p",null,[s[0]||(s[0]=a("To start recording a macro, press ")),e(o,{k:"ctrl+alt+q"}),s[1]||(s[1]=a(" and subsequently execute the desired steps one by one. When you're done, press ")),e(o,{k:"ctrl+alt+q"}),s[2]||(s[2]=a(" again to stop the macro recorder. Your new macro won't be saved to a file, but kept in the macro buffer instead. Now you will be able to run the recorded macro by pressing ")),e(o,{k:"ctrl+shift+alt+q"}),s[3]||(s[3]=a(", or save it to a file by selecting ")),s[4]||(s[4]=l("strong",null,"Tools | Save macro...",-1))]),s[6]||(s[6]=n(`<p>Note that the macro buffer will remember only the latest recorded macro. Also, macros only record commands sent to the buffer: window-level commands, such creating a new file, will be ignored.</p><h2 id="how-to-edit-macros" tabindex="-1">How to Edit Macros <a class="header-anchor" href="#how-to-edit-macros" aria-label="Permalink to &quot;How to Edit Macros&quot;">​</a></h2><p>As an alternative to recording a macro, you can edit it by hand. Just save a new file with the <code>.sublime-macro</code> extension under <code>Packages/User</code> and add commands to it. Macro files have this format:</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#89DDFF;">   {</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C792EA;">command</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">move_to</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C792EA;">args</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">to</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">hardeol</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;"> },</span></span>
<span class="line"><span style="color:#89DDFF;">   {</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C792EA;">command</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">insert</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C792EA;">args</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">characters</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#BABED8;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;"> },</span></span>
<span class="line"><span style="color:#89DDFF;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>See the <a href="/reference/commands.html">Commands</a> section for more information on commands.</p><p>If you&#39;re editing a macro by hand, you need to escape quotation marks, blank spaces and backslashes by preceding them with <code>\\</code>.</p><h3 id="where-to-store-macros" tabindex="-1">Where to Store Macros <a class="header-anchor" href="#where-to-store-macros" aria-label="Permalink to &quot;Where to Store Macros&quot;">​</a></h3><p>Macro files can be stored in any package folder, and then will show up under <strong>Tools | Macros | &lt;PackageName&gt;</strong>.</p><h2 id="key-binding-for-macros" tabindex="-1">Key Binding for Macros <a class="header-anchor" href="#key-binding-for-macros" aria-label="Permalink to &quot;Key Binding for Macros&quot;">​</a></h2><p>Macro files can be bound to key combinations by passing the macro file path to the <code>run_macro_file</code> command like so:</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#C792EA;">keys</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">super+alt+l</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">],</span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#C792EA;">command</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">run_macro_file</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#C792EA;">args</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">        &quot;</span><span style="color:#FFCB6B;">file</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">res://Packages/User/Example.sublime-macro</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,11))])}const f=t(i,[["render",D]]);export{h as __pageData,f as default};
