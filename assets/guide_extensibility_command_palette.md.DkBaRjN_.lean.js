import{_ as p,C as t,c as D,o as r,a2 as l,j as o,a,G as e}from"./chunks/framework.CwCSXIY0.js";const C=JSON.parse('{"title":"Command Palette","description":"","frontmatter":{"title":"Command Palette"},"headers":[],"relativePath":"guide/extensibility/command_palette.md","filePath":"guide/extensibility/command_palette.md","lastUpdated":1738694335000}'),F={name:"guide/extensibility/command_palette.md"};function c(y,s,i,u,d,m){const n=t("Key");return r(),D("div",null,[s[10]||(s[10]=l("",3)),o("p",null,[s[0]||(s[0]=a("The ")),s[1]||(s[1]=o("em",null,"command palette",-1)),s[2]||(s[2]=a(" bound to ")),e(n,{k:"ctrl+shift+p"}),s[3]||(s[3]=a(" is an interactive list whose purpose is to execute commands. The command palette is fed by entries in ")),s[4]||(s[4]=o("code",null,".sublime-commands",-1)),s[5]||(s[5]=a(" files. Usually, commands that don't warrant creating a key binding of their own are good candidates for inclusion in a ")),s[6]||(s[6]=o("code",null,".sublime-commands",-1)),s[7]||(s[7]=a(" files."))]),s[11]||(s[11]=l("",7)),o("ol",null,[o("li",null,[s[8]||(s[8]=a("Press ")),e(n,{k:"ctrl+shift+p"})]),s[9]||(s[9]=o("li",null,"Select command",-1))]),s[12]||(s[12]=o("p",null,[a("The command palette filters entries by context. This means that whenever you open it, you won't always see all the commands defined in every "),o("code",null,".sublime-commands"),a(" file.")],-1))])}const f=p(F,[["render",c]]);export{C as __pageData,f as default};
