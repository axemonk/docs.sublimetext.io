import{_ as o,E as n,c as r,m as e,a as s,J as i,a4 as t,o as l}from"./chunks/framework.DTvtauHd.js";const q=JSON.parse('{"title":"Macros","description":"","frontmatter":{"title":"Macros"},"headers":[],"relativePath":"guide/extensibility/macros.md","filePath":"guide/extensibility/macros.md","lastUpdated":1713138845000}'),h={name:"guide/extensibility/macros.md"},c=t('<h1 id="macros" tabindex="-1">Macros <a class="header-anchor" href="#macros" aria-label="Permalink to &quot;Macros&quot;">​</a></h1><p>Macros are a basic automation facility comprising sequences of commands. Use them whenever you need to repeat the exact same steps to perform an operation.</p><p>Macro files are JSON files with the extension <code>.sublime-macro</code>. Sublime Text ships with a few macros providing core functionality, such as line and word deletion. You can find these under <strong>Tools | Macros</strong> or in <code>Packages/Default</code>.</p><h2 id="how-to-record-macros" tabindex="-1">How to Record Macros <a class="header-anchor" href="#how-to-record-macros" aria-label="Permalink to &quot;How to Record Macros&quot;">​</a></h2>',4),p=e("strong",null,"Tools | Save macro...",-1),d=t(`<p>Note that the macro buffer will remember only the latest recorded macro. Also, macros only record commands sent to the buffer: window-level commands, such creating a new file, will be ignored.</p><h2 id="how-to-edit-macros" tabindex="-1">How to Edit Macros <a class="header-anchor" href="#how-to-edit-macros" aria-label="Permalink to &quot;How to Edit Macros&quot;">​</a></h2><p>As an alternative to recording a macro, you can edit it by hand. Just save a new file with the <code>.sublime-macro</code> extension under <code>Packages/User</code> and add commands to it. Macro files have this format:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;command&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;move_to&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;args&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;to&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hardeol&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;command&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;insert&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;args&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;characters&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><p>See the <a href="/reference/commands.html">Commands</a> section for more information on commands.</p><p>If you&#39;re editing a macro by hand, you need to escape quotation marks, blank spaces and backslashes by preceding them with <code>\\</code>.</p><h3 id="where-to-store-macros" tabindex="-1">Where to Store Macros <a class="header-anchor" href="#where-to-store-macros" aria-label="Permalink to &quot;Where to Store Macros&quot;">​</a></h3><p>Macro files can be stored in any package folder, and then will show up under <strong>Tools | Macros | &lt;PackageName&gt;</strong>.</p><h2 id="key-binding-for-macros" tabindex="-1">Key Binding for Macros <a class="header-anchor" href="#key-binding-for-macros" aria-label="Permalink to &quot;Key Binding for Macros&quot;">​</a></h2><p>Macro files can be bound to key combinations by passing the macro file path to the <code>run_macro_file</code> command like so:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;keys&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;super+alt+l&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;command&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;run_macro_file&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;args&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;file&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;res://Packages/User/Example.sublime-macro&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,11);function k(E,u,m,g,y,b){const a=n("Key");return l(),r("div",null,[c,e("p",null,[s("To start recording a macro, press "),i(a,{k:"ctrl+alt+q"}),s(" and subsequently execute the desired steps one by one. When you're done, press "),i(a,{k:"ctrl+alt+q"}),s(" again to stop the macro recorder. Your new macro won't be saved to a file, but kept in the macro buffer instead. Now you will be able to run the recorded macro by pressing "),i(a,{k:"ctrl+shift+alt+q"}),s(", or save it to a file by selecting "),p]),d])}const _=o(h,[["render",k]]);export{q as __pageData,_ as default};
