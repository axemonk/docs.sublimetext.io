import{_ as n,c as a,o as e,a2 as l}from"./chunks/framework.CwCSXIY0.js";const F=JSON.parse('{"title":"Syntax Definitions (Legacy)","description":"","frontmatter":{"title":"Syntax Definitions (Legacy)"},"headers":[],"relativePath":"reference/syntaxdefs_legacy.md","filePath":"reference/syntaxdefs_legacy.md","lastUpdated":1738542678000}'),p={name:"reference/syntaxdefs_legacy.md"};function o(t,s,r,c,i,d){return e(),a("div",null,s[0]||(s[0]=[l(`<h1 id="syntax-definitions-legacy" tabindex="-1">Syntax Definitions (Legacy) <a class="header-anchor" href="#syntax-definitions-legacy" aria-label="Permalink to &quot;Syntax Definitions (Legacy)&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>In Sublime Text 3.0 (Build 3084), a new syntax definition format has been added, with the <code>.sublime-syntax</code> extension.</p><p>It is highly encouraged to be used in favor of the legacy format described in this document, unless compatibility with older versions or other editors using this format is desired.</p><p>See the <a href="https://www.sublimetext.com/docs/syntax.html" target="_blank" rel="noreferrer">official documentation</a> for details.</p><p>This document describes the old <code>.tmLanguage</code> format inherited from TextMate.</p></div><h2 id="file-format" tabindex="-1">File Format <a class="header-anchor" href="#file-format" aria-label="Permalink to &quot;File Format&quot;">​</a></h2><p>TextMate syntax definitions are Plist files with the <code>.tmLanguage</code> extension. However, for convenience in this reference document, YAML is shown instead.</p><p>Additionally, Sublime Text also understands the <code>.hidden-tmLanguage</code> extension, which can not be selected by the user but only by set by plugins. &quot;Find in Files&quot; makes use of this. The downsite is that these can not be included by import statements in other language definitions.</p><div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">---</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># {{ $frontmatter.title }}</span></span>
<span class="line"><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> Sublime Snippet (Raw)</span></span>
<span class="line"><span style="color:#F07178;">scopeName</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> source.ssraw</span></span>
<span class="line"><span style="color:#F07178;">fileTypes</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#C3E88D;">ssraw</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#F07178;">uuid</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> 0da65be4-5aac-4b6f-8071-1aadb970b8d9</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">patterns</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">  -</span><span style="color:#F07178;"> comment</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> Tab stops like $1, $2...</span></span>
<span class="line"><span style="color:#F07178;">    name</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> keyword.other.ssraw</span></span>
<span class="line"><span style="color:#F07178;">    match</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> \\$\\d+</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  -</span><span style="color:#F07178;"> comment</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> Variables like $PARAM1, $TM_SELECTION...</span></span>
<span class="line"><span style="color:#F07178;">    name</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> keyword.other.ssraw</span></span>
<span class="line"><span style="color:#F07178;">    match</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> \\$([A-Za-z][A-Za-z0-9_]+)</span></span>
<span class="line"><span style="color:#F07178;">    captures</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">      &#39;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> constant.numeric.ssraw</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  -</span><span style="color:#F07178;"> name</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> variable.complex.ssraw</span></span>
<span class="line"><span style="color:#F07178;">    begin</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">(\\$)(\\{)([0-9]+):</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F07178;">    beginCaptures</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">      &#39;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> keyword.other.ssraw</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">      &#39;</span><span style="color:#C3E88D;">3</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> constant.numeric.ssraw</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    end</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> \\}</span></span>
<span class="line"><span style="color:#F07178;">    patterns</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">      -</span><span style="color:#F07178;"> include</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> $self</span></span>
<span class="line"><span style="color:#89DDFF;">      -</span><span style="color:#F07178;"> name</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> support.other.ssraw</span></span>
<span class="line"><span style="color:#F07178;">        match</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> .</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  -</span><span style="color:#F07178;"> name</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> constant.character.escape.ssraw</span></span>
<span class="line"><span style="color:#F07178;">    match</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> \\\\[$&lt;&gt;]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  -</span><span style="color:#F07178;"> name</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> invalid.illegal.ssraw</span></span>
<span class="line"><span style="color:#F07178;">    match</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">[$&lt;&gt;]</span><span style="color:#89DDFF;">&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><dl><dt><code>name</code></dt><dd><p>Descriptive name for the syntax definition. Shows up in the syntax definition dropdown menu located in the bottom right of the Sublime Text interface. It&#39;s usually the name of the programming language or equivalent.</p></dd><dt><code>scopeName</code></dt><dd><p>Name of the topmost scope for this syntax definition. Either <code>source.&lt;lang&gt;</code> or <code>text.&lt;lang&gt;</code>. Use <code>source</code> for programming languages and <code>text</code> for markup and everything else.</p></dd><dt><code>fileTypes</code></dt><dd><p>This is a list of file extensions (without the leading dot). When opening files of these types, Sublime Text will automatically activate this syntax definition for them. Optional.</p></dd><dt><code>uuid</code></dt><dd><p>Unique indentifier for this syntax definition. Currently ignored.</p></dd><dt><code>patterns</code></dt><dd><p>Array of <a href="#patterns-array">patterns</a> to match against the buffer&#39;s text.</p></dd><dt><code>repository</code></dt><dd><p>Array of patterns abstracted out from the <code>patterns</code> element. Useful to keep the syntax definition tidy as well as for specialized uses like recursive patterns or re-using the same pattern. Optional.</p></dd></dl><h2 id="patterns-array" tabindex="-1">Patterns Array <a class="header-anchor" href="#patterns-array" aria-label="Permalink to &quot;Patterns Array&quot;">​</a></h2><p>A pattern is a mapping in one of the following formats:</p><dl><dt><strong>match</strong></dt><dd><p>Contains the following elements:</p><table tabindex="0"><thead><tr><th>Element</th><th>Description</th></tr></thead><tbody><tr><td><code>match</code></td><td>Pattern to search for.</td></tr><tr><td><code>name</code></td><td>Optional. Scope name to be assigned to matches of <code>match</code>.</td></tr><tr><td><code>comment</code></td><td>Optional. For information only.</td></tr><tr><td><code>captures</code></td><td>Optional. Refinement of <code>match</code>. See below.</td></tr></tbody></table><p>In turn, <code>captures</code> can contain <em>n</em> of the following pairs of elements (note that <code>0</code> refers to the whole match):</p><table tabindex="0"><thead><tr><th>Capture</th><th>Description</th></tr></thead><tbody><tr><td><code>0</code>..<code>n</code></td><td>Name of the group referenced. Must be a string.</td></tr><tr><td><code>name</code></td><td>Scope to be assigned to the group.</td></tr></tbody></table><p><em>Example:</em></p><div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># Simple</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> comment</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> Sequences like \\$, \\&gt; and \\&lt;</span></span>
<span class="line"><span style="color:#F07178;">  name</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> constant.character.escape.ssraw</span></span>
<span class="line"><span style="color:#F07178;">  match</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> \\\\[$&lt;&gt;]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># With captures</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> comment</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> Tab stops like $1, $2...</span></span>
<span class="line"><span style="color:#F07178;">  name</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> keyword.other.ssraw</span></span>
<span class="line"><span style="color:#F07178;">  match</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> \\$(\\d+)</span></span>
<span class="line"><span style="color:#F07178;">  captures</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">    &#39;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> constant.numeric.ssraw</span><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div></dd><dt><strong>include</strong></dt><dd><p>Includes an item from the repository, another syntax definitions or the current one.</p><p>References:</p><table tabindex="0"><thead><tr><th>Include</th><th>Description</th></tr></thead><tbody><tr><td>$self</td><td>The current syntax definition.</td></tr><tr><td>#itemName</td><td>itemName in the repository.</td></tr><tr><td>source.js</td><td>External syntax definitions.</td></tr></tbody></table><p><em>Examples:</em></p><div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># Requires presence of DoubleQuotedStrings element in the repository.</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> include</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">#DoubleQuotedStrings</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Recursively includes the complete current syntax definition.</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> include</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> $self</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Includes and external syntax definition.</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> include</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> source.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></dd><dt><strong>begin..end</strong></dt><dd><p>Defines a scope potentially spanning multiple lines. Contains the following elements (only <code>begin</code> and <code>end</code> are required):</p><table tabindex="0"><thead><tr><th>Scope</th><th>Description</th></tr></thead><tbody><tr><td><code>name</code></td><td>Scope name for the content including the markers.</td></tr><tr><td><code>contentName</code></td><td>Scope name for the content excluding the markers.</td></tr><tr><td><code>begin</code></td><td>The start marker pattern.</td></tr><tr><td><code>end</code></td><td>The end marker pattern.</td></tr><tr><td><code>name</code></td><td>Scope name for the whole region.</td></tr><tr><td><code>beginCaptures</code></td><td><code>captures</code> for <code>begin</code>. See <code>captures</code>.</td></tr><tr><td><code>endCaptures</code></td><td><code>captures</code> for <code>end</code>. See <code>captures</code>.</td></tr><tr><td><code>patterns</code></td><td>Array of patterns to be matched against the content.</td></tr></tbody></table><p><em>Example:</em></p><div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> variable.complex.ssraw</span></span>
<span class="line"><span style="color:#F07178;">begin</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">(\\$)(\\{)([0-9]+):</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F07178;">beginCaptures</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">  &#39;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> keyword.other.ssraw</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">  &#39;</span><span style="color:#C3E88D;">3</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> constant.numeric.ssraw</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">end</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> \\}</span></span>
<span class="line"><span style="color:#F07178;">patterns</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> include</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> $self</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> name</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> support.other.ssraw</span></span>
<span class="line"><span style="color:#F07178;">  match</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> .</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></dd></dl><h2 id="repository" tabindex="-1">Repository <a class="header-anchor" href="#repository" aria-label="Permalink to &quot;Repository&quot;">​</a></h2><p>A repository defines items that can be referenced from <a href="#patterns-array">a patterns array</a> (global or within a <em>begin..end</em> pattern) via an <code>include</code> pattern.</p><p>A repository item may be a single pattern or an array of patterns.</p><p><em>Example:</em></p><div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#F07178;">repository</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">  numericConstant</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">    patterns</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">      -</span><span style="color:#F07178;"> name</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> constant.numeric.double.powershell</span></span>
<span class="line"><span style="color:#F07178;">        match</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> \\d*(?&lt;!\\.)(\\.)\\d+(d)?(mb|kb|gb)?</span></span>
<span class="line"><span style="color:#F07178;">        captures</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">          &#39;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> support.constant.powershell</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">          &#39;</span><span style="color:#C3E88D;">2</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> support.constant.powershell</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">          &#39;</span><span style="color:#C3E88D;">3</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> keyword.other.powershell</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">      -</span><span style="color:#F07178;"> name</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> constant.numeric.powershell</span></span>
<span class="line"><span style="color:#F07178;">        match</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> (?&lt;!\\w)\\d+(d)?(mb|kb|gb)?(?!\\w)</span></span>
<span class="line"><span style="color:#F07178;">        captures</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">          &#39;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> support.constant.powershell</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">          &#39;</span><span style="color:#C3E88D;">2</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> keyword.other.powershell</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  scriptblock</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">    name</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> meta.scriptblock.powershell</span></span>
<span class="line"><span style="color:#F07178;">    begin</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> \\{</span></span>
<span class="line"><span style="color:#F07178;">    end</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> \\}</span></span>
<span class="line"><span style="color:#F07178;">    patterns</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">      -</span><span style="color:#F07178;"> include</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> $self</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h2 id="escape-sequences" tabindex="-1">Escape Sequences <a class="header-anchor" href="#escape-sequences" aria-label="Permalink to &quot;Escape Sequences&quot;">​</a></h2><p>Be sure to escape JSON/XML sequences as needed.</p><p>For YAML, additionally make sure that you didn&#39;t unintentionally start a new scalar by not using quotes for your strings. Examples that <strong>won&#39;t work</strong> as expected:</p><div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#F07178;">match</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#C3E88D;">aeiou</span><span style="color:#89DDFF;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">include</span><span style="color:#89DDFF;">:</span><span style="color:#676E95;font-style:italic;"> #this-is-actually-a-comment</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">match</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">#</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">\\w+&quot;&quot;</span><span style="color:#676E95;font-style:italic;"> # contains double quotation marks</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>Use single quotes in these situations:</p><div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#F07178;">match</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">[aeiou]</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">include</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">#this-is-actually-a-comment</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">match</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">#&quot;\\w+</span><span style="color:#89DDFF;">&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,21)]))}const D=n(p,[["render",o]]);export{F as __pageData,D as default};
