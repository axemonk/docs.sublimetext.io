(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{369:function(s,t,a){"use strict";a.r(t);var e=a(7),n=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("div",{staticClass:"custom-block seealso"},[t("p",{staticClass:"custom-block-title"},[s._v("See Also")]),t("dl",[t("dt",[t("a",{attrs:{href:"/reference/key_bindings"}},[s._v("Reference for key bindings")])]),s._v(" "),t("dd",[s._v("Complete documentation on key bindings.")])])]),t("p",[s._v("Key bindings let you\nmap sequences of key presses to commands.")]),s._v(" "),t("h2",{attrs:{id:"file-format"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#file-format"}},[s._v("#")]),s._v(" File Format")]),s._v(" "),t("p",[s._v("Key bindings are defined in JSON\nand stored in "),t("code",[s._v(".sublime-keymap")]),s._v(" files.")]),s._v(" "),t("p",[s._v("In the same package, separate keymap files\nfor Linux, OSX and Windows\nmay exist for better OS integration.")]),s._v(" "),t("h3",{attrs:{id:"example"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[s._v("#")]),s._v(" Example")]),s._v(" "),t("div",{staticClass:"language-json extra-class"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"keys"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ctrl+shift+n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"command"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"new_window"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"keys"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ctrl+o"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"command"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"prompt_open_file"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])])]),t("h2",{attrs:{id:"defining-and-overriding-key-bindings"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#defining-and-overriding-key-bindings"}},[s._v("#")]),s._v(" Defining and Overriding Key Bindings")]),s._v(" "),t("p",[s._v("Sublime Text ships with default key bindings\n(for example, "),t("code",[s._v("Packages/Default/Default (Windows).sublime-keymap)")]),s._v(".\nIn order to override default key bindings\nor add new ones,\nuse a separate keymap file\nwith higher precedence:\nfor example, "),t("code",[s._v("Packages/User/Default (Windows).sublime-keymap")]),s._v(".")]),s._v(" "),t("h2",{attrs:{id:"advanced-key-bindings"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#advanced-key-bindings"}},[s._v("#")]),s._v(" Advanced Key Bindings")]),s._v(" "),t("p",[s._v("Simple key bindings consist\nof a sequence of one or more keys mapped to a command.\nHowever, there are more complex syntaxes\nfor passing arguments to commands and\nrestricting key bindings to specific contexts.")]),s._v(" "),t("h3",{attrs:{id:"passing-arguments"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#passing-arguments"}},[s._v("#")]),s._v(" Passing Arguments")]),s._v(" "),t("p",[s._v("Use the "),t("code",[s._v("args")]),s._v(" key\nto specify arguments:")]),s._v(" "),t("div",{staticClass:"language-json extra-class"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"keys"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"shift+enter"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"command"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"insert"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"args"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"characters"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v("Here, "),t("code",[s._v("\\n")]),s._v(" is passed to the "),t("code",[s._v("insert")]),s._v(" command\nwhenever "),t("Key",{attrs:{k:"shift+enter"}}),s._v(" is pressed.")],1),s._v(" "),t("h3",{attrs:{id:"contexts"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#contexts"}},[s._v("#")]),s._v(" Contexts")]),s._v(" "),t("p",[s._v("Contexts determine\nwhether a given key binding is enabled\nbased on the caret's position\nor some other state.")]),s._v(" "),t("div",{staticClass:"language-json extra-class"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"keys"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"escape"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"command"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"clear_fields"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"context"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"key"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"has_next_field"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"operator"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"equal"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"operand"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v("This key binding translates to\n"),t("em",[s._v("clear snippet fields and resume normal editing\nif there is a next snippet field available")]),s._v(".\nThus, pressing "),t("Key",{attrs:{k:"escape"}}),s._v(" will only\ntrigger this key binding\nif you are cycling through snippet fields.")],1),s._v(" "),t("p",[s._v("The same key binding\nmay be mapped to multiple contexts,\nso a single sequence of key presses\nmay produce different results\nat different times.")]),s._v(" "),t("h3",{attrs:{id:"key-chords"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#key-chords"}},[s._v("#")]),s._v(" Key Chords")]),s._v(" "),t("p",[s._v("You can create key bindings\ncomposed of multiple keys.")]),s._v(" "),t("div",{staticClass:"language-json extra-class"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"keys"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ctrl+k"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ctrl+v"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"command"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"paste_from_history"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v("Here, to trigger the command "),t("code",[s._v("paste_from_history")]),s._v(",\nyou have to press "),t("Key",{attrs:{k:"ctrl+k"}}),s._v(" first,\nthen release "),t("Key",{attrs:{k:"k"}}),s._v(",\nand finally press "),t("Key",{attrs:{k:"v"}}),s._v(".")],1),s._v(" "),t("p",[s._v("Note: This example is a default key binding,\nso you can try it out for yourself.")])])}),[],!1,null,null,null);t.default=n.exports}}]);