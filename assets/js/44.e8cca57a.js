(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{378:function(e,t,a){"use strict";a.r(t);var s=a(7),n=Object(s.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("Key bindings map key presses to commands.")]),e._v(" "),t("div",{staticClass:"custom-block seealso"},[t("p",{staticClass:"custom-block-title"},[e._v("See Also")]),t("p",[t("a",{attrs:{href:"https://www.sublimetext.com/docs/key_bindings.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Official documentation for Key Bindings"),t("OutboundLink")],1)])]),t("h2",{attrs:{id:"file-format"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#file-format"}},[e._v("#")]),e._v(" File Format")]),e._v(" "),t("p",[e._v("Key bindings are stored in "),t("code",[e._v(".sublime-keymap")]),e._v(" files\nand defined in JSON.\nKeymap files may be located anywhere in a package.")]),e._v(" "),t("h3",{attrs:{id:"naming-keymap-files"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#naming-keymap-files"}},[e._v("#")]),e._v(" Naming Keymap Files")]),e._v(" "),t("p",[e._v("Any keymap named "),t("code",[e._v("Default.sublime-keymap")]),e._v("\nwill always be applied in all platforms.")]),e._v(" "),t("p",[e._v("Additionally, each platform\ncan optionally have its own keymap:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("Default (Windows).sublime-keymap")])]),e._v(" "),t("li",[t("code",[e._v("Default (OSX).sublime-keymap")])]),e._v(" "),t("li",[t("code",[e._v("Default (Linux).sublime-keymap")])])]),e._v(" "),t("p",[e._v("Sublime Text will ignore any "),t("code",[e._v(".sublime-keymap")]),e._v(" file\nwhose name doesn't follow the patterns just described.")]),e._v(" "),t("h3",{attrs:{id:"structure-of-a-key-binding"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#structure-of-a-key-binding"}},[e._v("#")]),e._v(" Structure of a Key Binding")]),e._v(" "),t("p",[e._v("Keymaps are arrays of key bindings.\nThese are all valid elements in a key binding:")]),e._v(" "),t("dl",[t("dt",[t("code",[e._v("keys")])]),e._v(" "),t("dd",[t("p",[e._v("An array of case-sensitive keys.\nModifiers can be specified\nwith the "),t("code",[e._v("+")]),e._v(" sign.\nYou can build chords\nby adding elements to the array\n(for example, "),t("code",[e._v('["ctrl+k","ctrl+j"]')]),e._v(").\nAmbiguous chords are resolved\nwith a timeout.")])]),e._v(" "),t("dt",[t("code",[e._v("command")])]),e._v(" "),t("dd",[t("p",[e._v("Name of the command to be executed.")])]),e._v(" "),t("dt",[t("code",[e._v("args")])]),e._v(" "),t("dd",[t("p",[e._v("Dictionary of arguments\nto be passed to "),t("code",[e._v("command")]),e._v(".\nKeys must be names\nof parameters to "),t("code",[e._v("command")]),e._v(".")])]),e._v(" "),t("dt",[t("code",[e._v("context")])]),e._v(" "),t("dd",[t("p",[e._v("Array of conditions\nthat determine a particular "),t("em",[e._v("context")]),e._v(".\nAll conditions must evaluate to "),t("code",[e._v("true")]),e._v("\nfor the context to be active.\nSee "),t("a",{attrs:{href:"#structure-of-a-context"}},[e._v("Structure of a Context")]),e._v(" below\nfor more information.")])])]),e._v(" "),t("p",[e._v("Here's an example:")]),e._v(" "),t("div",{staticClass:"language-json extra-class"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token property"}},[e._v('"keys"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"shift+enter"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token property"}},[e._v('"command"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"insert_snippet"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token property"}},[e._v('"args"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),t("span",{pre:!0,attrs:{class:"token property"}},[e._v('"contents"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"\\n\\t$0\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token property"}},[e._v('"context"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token property"}},[e._v('"key"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"setting.auto_indent"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token property"}},[e._v('"operator"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"equal"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token property"}},[e._v('"operand"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token property"}},[e._v('"key"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"selection_empty"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token property"}},[e._v('"operator"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"equal"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token property"}},[e._v('"operand"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token property"}},[e._v('"match_all"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token property"}},[e._v('"key"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"preceding_text"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token property"}},[e._v('"operator"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"regex_contains"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token property"}},[e._v('"operand"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"\\\\{$"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token property"}},[e._v('"match_all"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token property"}},[e._v('"key"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"following_text"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token property"}},[e._v('"operator"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"regex_contains"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token property"}},[e._v('"operand"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"^\\\\}"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token property"}},[e._v('"match_all"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),t("h3",{attrs:{id:"structure-of-a-context"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#structure-of-a-context"}},[e._v("#")]),e._v(" Structure of a Context")]),e._v(" "),t("dl",[t("dt",[t("code",[e._v("key")])]),e._v(" "),t("dd",[t("p",[e._v("Name of the context\nwhose value you want to query.")])]),e._v(" "),t("dt",[t("code",[e._v("operator")])]),e._v(" "),t("dd",[t("p",[e._v("Type of test to perform against "),t("code",[e._v("key")]),e._v("'s value.\nDefaults to "),t("code",[e._v("equal")]),e._v(".")])]),e._v(" "),t("dt",[t("code",[e._v("operand")])]),e._v(" "),t("dd",[t("p",[e._v("The result returned by "),t("code",[e._v("key")]),e._v("\nis tested against this value.")])]),e._v(" "),t("dt",[t("code",[e._v("match_all")])]),e._v(" "),t("dd",[t("p",[e._v("Requires the test to succeed\nfor all selections.\nDefaults to "),t("code",[e._v("false")]),e._v(".")])])]),e._v(" "),t("h4",{attrs:{id:"context-keys"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#context-keys"}},[e._v("#")]),e._v(" Context Keys")]),e._v(" "),t("p",[e._v("Arbitrary keys may be provided by plugins.\nThus, this section only features keys\nprovided by Sublime Text itself.")]),e._v(" "),t("dl",[t("dt",[t("code",[e._v("auto_complete_visible")])]),e._v(" "),t("dd",[t("p",[e._v("Returns "),t("code",[e._v("true")]),e._v("\nif the autocomplete list\nis visible.")])]),e._v(" "),t("dt",[t("code",[e._v("has_next_field")])]),e._v(" "),t("dd",[t("p",[e._v("Returns "),t("code",[e._v("true")]),e._v("\nif a next snippet field\nis available.")])]),e._v(" "),t("dt",[t("code",[e._v("has_prev_field")])]),e._v(" "),t("dd",[t("p",[e._v("Returns "),t("code",[e._v("true")]),e._v("\nif a previous snippet field\nis available.")])]),e._v(" "),t("dt",[t("code",[e._v("last_command")])]),e._v(" "),t("dd",[t("p",[e._v("Returns the name of the last command run.")])]),e._v(" "),t("dt",[t("code",[e._v("num_selections")])]),e._v(" "),t("dd",[t("p",[e._v("Returns the number of selections.")])]),e._v(" "),t("dt",[t("code",[e._v("overlay_visible")])]),e._v(" "),t("dd",[t("p",[e._v("Returns "),t("code",[e._v("true")]),e._v("\nif any overlay is visible.")])]),e._v(" "),t("dt",[t("code",[e._v("panel_visible")])]),e._v(" "),t("dd",[t("p",[e._v("Returns "),t("code",[e._v("true")]),e._v("\nif any panel is visible.")])]),e._v(" "),t("dt",[t("code",[e._v("following_text")])]),e._v(" "),t("dd",[t("p",[e._v("Test against the selected text and the text\nfollowing it until the end of the line.")])]),e._v(" "),t("dt",[t("code",[e._v("preceding_text")])]),e._v(" "),t("dd",[t("p",[e._v("Test against the text on the line up to and\nincluding the selection.")])]),e._v(" "),t("dt",[t("code",[e._v("selection_empty")])]),e._v(" "),t("dd",[t("p",[e._v("Returns "),t("code",[e._v("true")]),e._v("\nif the selection\nis an empty region.")])]),e._v(" "),t("dt",[t("code",[e._v("setting.x")])]),e._v(" "),t("dd",[t("p",[e._v("Returns the value of the "),t("code",[e._v("x")]),e._v(" setting.\n"),t("code",[e._v("x")]),e._v(" can be any string.")])]),e._v(" "),t("dt",[t("code",[e._v("text")])]),e._v(" "),t("dd",[t("p",[e._v("Restricts the test\nto the selected text.")])]),e._v(" "),t("dt",[t("code",[e._v("selector")])]),e._v(" "),t("dd",[t("p",[e._v("Returns the name of the current scope.")])]),e._v(" "),t("dt",[t("code",[e._v("panel_has_focus")])]),e._v(" "),t("dd",[t("p",[e._v("Returns "),t("code",[e._v("true")]),e._v("\nif a panel\nhas input focus.")])]),e._v(" "),t("dt",[t("code",[e._v("panel")])]),e._v(" "),t("dd",[t("p",[e._v("Returns "),t("code",[e._v("true")]),e._v("\nif the panel given as "),t("code",[e._v("operand")]),e._v("\nis visible.")])])]),e._v(" "),t("h4",{attrs:{id:"context-operators"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#context-operators"}},[e._v("#")]),e._v(" Context Operators")]),e._v(" "),t("dl",[t("dt",[t("code",[e._v("equal")]),e._v(", "),t("code",[e._v("not_equal")])]),e._v(" "),t("dd",[t("p",[e._v("Test for equality.")])]),e._v(" "),t("dt",[t("code",[e._v("regex_match")]),e._v(", "),t("code",[e._v("not_regex_match")])]),e._v(" "),t("dd",[t("p",[e._v("Match against a regular expression (full match).")])]),e._v(" "),t("dt",[t("code",[e._v("regex_contains")]),e._v(", "),t("code",[e._v("not_regex_contains")])]),e._v(" "),t("dd",[t("p",[e._v("Match against a regular expression (partial match).")])])]),e._v(" "),t("h2",{attrs:{id:"bindable-keys"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bindable-keys"}},[e._v("#")]),e._v(" Bindable Keys")]),e._v(" "),t("p",[e._v("Keys in key bindings may be specified\nliterally by symbol\nor by a name for a special key.\nSymbols cannot be combined with modifiers.\nFor example,\n"),t("code",[e._v("B")]),e._v(" will catch any key sequence inserting a "),t("code",[e._v("B")]),e._v(" glyph,\nbut "),t("code",[e._v("ctrl+B")]),e._v(" is invalid\nand needs to be written as "),t("code",[e._v("ctrl+shift+b")]),e._v(" instead.")]),e._v(" "),t("p",[e._v("Here's the list of the names for special keys:")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Keys")]),e._v(" "),t("th"),e._v(" "),t("th")])]),e._v(" "),t("tbody",[t("tr",[t("td",[t("code",[e._v("up")])]),e._v(" "),t("td",[t("code",[e._v("keypad0")])]),e._v(" "),t("td",[t("code",[e._v("f1")])])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("down")])]),e._v(" "),t("td",[t("code",[e._v("keypad1")])]),e._v(" "),t("td",[t("code",[e._v("f2")])])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("right")])]),e._v(" "),t("td",[t("code",[e._v("keypad2")])]),e._v(" "),t("td",[t("code",[e._v("f3")])])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("left")])]),e._v(" "),t("td",[t("code",[e._v("keypad3")])]),e._v(" "),t("td",[t("code",[e._v("f4")])])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("insert")])]),e._v(" "),t("td",[t("code",[e._v("keypad4")])]),e._v(" "),t("td",[t("code",[e._v("f5")])])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("home")])]),e._v(" "),t("td",[t("code",[e._v("keypad5")])]),e._v(" "),t("td",[t("code",[e._v("f6")])])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("end")])]),e._v(" "),t("td",[t("code",[e._v("keypad6")])]),e._v(" "),t("td",[t("code",[e._v("f7")])])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("pageup")])]),e._v(" "),t("td",[t("code",[e._v("keypad7")])]),e._v(" "),t("td",[t("code",[e._v("f8")])])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("pagedown")])]),e._v(" "),t("td",[t("code",[e._v("keypad8")])]),e._v(" "),t("td",[t("code",[e._v("f9")])])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("backspace")])]),e._v(" "),t("td",[t("code",[e._v("keypad9")])]),e._v(" "),t("td",[t("code",[e._v("f10")])])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("delete")])]),e._v(" "),t("td",[t("code",[e._v("keypad_period")])]),e._v(" "),t("td",[t("code",[e._v("f11")])])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("tab")])]),e._v(" "),t("td",[t("code",[e._v("keypad_divide")])]),e._v(" "),t("td",[t("code",[e._v("f12")])])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("enter")])]),e._v(" "),t("td",[t("code",[e._v("keypad_multiply")])]),e._v(" "),t("td",[t("code",[e._v("f13")])])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("pause")])]),e._v(" "),t("td",[t("code",[e._v("keypad_minus")])]),e._v(" "),t("td",[t("code",[e._v("f14")])])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("escape")])]),e._v(" "),t("td",[t("code",[e._v("keypad_plus")])]),e._v(" "),t("td",[t("code",[e._v("f15")])])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("space")])]),e._v(" "),t("td",[t("code",[e._v("keypad_enter")])]),e._v(" "),t("td",[t("code",[e._v("f16")])])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("clear")])]),e._v(" "),t("td"),e._v(" "),t("td",[t("code",[e._v("f17")])])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("sysreq")])]),e._v(" "),t("td",[t("code",[e._v("browser_back")])]),e._v(" "),t("td",[t("code",[e._v("f18")])])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("break")])]),e._v(" "),t("td",[t("code",[e._v("browser_forward")])]),e._v(" "),t("td",[t("code",[e._v("f19")])])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("context_menu")])]),e._v(" "),t("td",[t("code",[e._v("browser_refresh")])]),e._v(" "),t("td",[t("code",[e._v("f20")])])]),e._v(" "),t("tr",[t("td"),e._v(" "),t("td",[t("code",[e._v("browser_stop")])]),e._v(" "),t("td",[t("code",[e._v("f21")])])]),e._v(" "),t("tr",[t("td"),e._v(" "),t("td",[t("code",[e._v("browser_search")])]),e._v(" "),t("td",[t("code",[e._v("f22")])])]),e._v(" "),t("tr",[t("td"),e._v(" "),t("td",[t("code",[e._v("browser_favorites")])]),e._v(" "),t("td",[t("code",[e._v("f23")])])]),e._v(" "),t("tr",[t("td"),e._v(" "),t("td",[t("code",[e._v("browser_home")])]),e._v(" "),t("td",[t("code",[e._v("f24")])])])])]),e._v(" "),t("h3",{attrs:{id:"modifiers"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#modifiers"}},[e._v("#")]),e._v(" Modifiers")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("shift")])]),e._v(" "),t("li",[t("code",[e._v("ctrl")]),e._v(" or "),t("code",[e._v("control")])]),e._v(" "),t("li",[t("code",[e._v("alt")])]),e._v(" "),t("li",[t("code",[e._v("super")]),e._v(" ("),t("strong",[e._v("Windows")]),e._v(": Windows key, "),t("strong",[e._v("MacOS")]),e._v(": Command Key)")]),e._v(" "),t("li",[t("code",[e._v("primary")]),e._v(" ("),t("strong",[e._v("Windows")]),e._v(": Control key, "),t("strong",[e._v("MacOS")]),e._v(": Command Key)")]),e._v(" "),t("li",[t("code",[e._v("command")]),e._v(" ("),t("strong",[e._v("MacOS only")]),e._v(")")]),e._v(" "),t("li",[t("code",[e._v("option")]),e._v(" ("),t("strong",[e._v("MacOS only")]),e._v(": same as "),t("code",[e._v("alt")]),e._v(")")])]),e._v(" "),t("h3",{attrs:{id:"the-any-character-binding"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#the-any-character-binding"}},[e._v("#")]),e._v(" The Any Character Binding")]),e._v(" "),t("p",[e._v("Adding a binding for "),t("code",[e._v("<character>")]),e._v("\n(with the angled brackets and no modifiers)\ncauses Sublime Text to bind the given command\nfor "),t("strong",[e._v("all")]),e._v(" glyphs provided to it.\nYou should thus only use this binding\nwith an accompanying context filter.")]),e._v(" "),t("p",[e._v("The specified command will then receive\nan additional "),t("code",[e._v("character")]),e._v(" argument\ncontaining the glyph that was captured.")]),e._v(" "),t("h3",{attrs:{id:"warning-about-bindable-keys"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#warning-about-bindable-keys"}},[e._v("#")]),e._v(" Warning about Bindable Keys")]),e._v(" "),t("p",[e._v("If you're developing a package,\nkeep this in mind:")]),e._v(" "),t("ul",[t("li",[t("kbd",[e._v("Ctrl+Alt+<alphanum>")]),e._v(" should never be used in any Windows key bindings.")]),e._v(" "),t("li",[t("kbd",[e._v("Option+<alphanum>")]),e._v(" should never be used in any macOS key bindings.")])]),e._v(" "),t("p",[e._v("In both cases,\nthe user's ability\nto insert non-ASCII characters\nwould be compromised otherwise.")]),e._v(" "),t("p",[e._v("End-users are free to remap\nany key combination.")]),e._v(" "),t("h2",{attrs:{id:"command-mode"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#command-mode"}},[e._v("#")]),e._v(" Command Mode")]),e._v(" "),t("p",[e._v("Sublime Text provides a "),t("code",[e._v("command_mode")]),e._v(" setting\nto prevent key presses\nfrom being sent to the buffer.\nThis is useful, for example,\nto emulate Vim's modal behavior.")]),e._v(" "),t("p",[e._v("Key bindings not intended for command mode\n(generally, all of them)\nshould include a context like this:")]),e._v(" "),t("div",{staticClass:"language-json extra-class"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),t("span",{pre:!0,attrs:{class:"token property"}},[e._v('"key"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"setting.command_mode"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token property"}},[e._v('"operand"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),t("p",[e._v("This way, plugins legitimately using command mode\nwill be able to define appropriate key bindings\nwithout interference.")]),e._v(" "),t("h2",{attrs:{id:"order-of-preference-for-key-bindings"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#order-of-preference-for-key-bindings"}},[e._v("#")]),e._v(" Order of Preference for Key Bindings")]),e._v(" "),t("p",[e._v("Key bindings in a keymap file are evaluated\nfrom the bottom to the top.\nThe first matching context wins.")]),e._v(" "),t("h2",{attrs:{id:"keeping-keymaps-organized"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#keeping-keymaps-organized"}},[e._v("#")]),e._v(" Keeping Keymaps Organized")]),e._v(" "),t("p",[e._v("Sublime Text ships with default keymaps\nunder "),t("code",[e._v("Packages/Default")]),e._v(".\nOther packages may include\nkeymap files of their own.")]),e._v(" "),t("p",[e._v("The recommended storage location\nfor your personal keymap files is "),t("code",[e._v("Packages/User")]),e._v(".")]),e._v(" "),t("div",{staticClass:"custom-block seealso"},[t("p",{staticClass:"custom-block-title"},[e._v("See Also")]),t("p",[t("RouterLink",{attrs:{to:"/guide/extensibility/packages.html#merging-and-order-of-precedence"}},[e._v("Merging and Order of Precedence")])],1)]),t("h2",{attrs:{id:"international-keyboards"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#international-keyboards"}},[e._v("#")]),e._v(" International Keyboards")]),e._v(" "),t("p",[e._v("Due to the way Sublime Text\nmaps key names to physical keys,\nkey names may not correspond to\nphysical keys in keyboard layouts\nother than US English.")]),e._v(" "),t("h2",{attrs:{id:"troubleshooting"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#troubleshooting"}},[e._v("#")]),e._v(" Troubleshooting")]),e._v(" "),t("p",[e._v("To enable logging\nrelated to keymaps, "),t("a",{attrs:{href:"https://www.sublimetext.com/docs/api_reference.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("see the documentation"),t("OutboundLink")],1),e._v(" for:")]),e._v(" "),t("ul",[t("li",[e._v("sublime.log_commands(flag)")]),e._v(" "),t("li",[e._v("sublime.log_input(flag)")])]),e._v(" "),t("p",[e._v("These may help with debugging keymaps.\nWhen a key chord does not trigger an input log,\nanother application or your operating system\nis likely grabbing the key\nbefore it can reach Sublime Text.")])])}),[],!1,null,null,null);t.default=n.exports}}]);