(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{468:function(t,a,n){"use strict";n.r(a);var s=n(18),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[t._v("Commands are ubiquitous in Sublime Text: key bindings, menu items and\nmacros all work through the command system. They are found in other\nplaces too.")]),t._v(" "),n("p",[t._v("Some commands are implemented in the editor's core, but many of them are\nprovided as Python plugins. Every command can be called from a Python\nplugin.")]),t._v(" "),n("h2",{attrs:{id:"command-dispatching"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#command-dispatching"}},[t._v("#")]),t._v(" Command Dispatching")]),t._v(" "),n("p",[t._v("Normally, commands are bound to the application object, a window object\nor a view object. Window objects, however, will dispatch commands based\non input focus, so you can issue a view command from a window object and\nthe correct view instance will be found for you.")]),t._v(" "),n("h2",{attrs:{id:"anatomy-of-a-command"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#anatomy-of-a-command"}},[t._v("#")]),t._v(" Anatomy of a Command")]),t._v(" "),n("p",[t._v("Commands have a name separated by underscores (snake_case) like\n"),n("code",[t._v("hot_exit")]),t._v(", and can take a dictionary of arguments whose keys must be\nstrings and whose values must be JSON types. Here are a few examples of\ncommands run from the Python console:")]),t._v(" "),n("div",{staticClass:"language-py extra-class"},[n("pre",{pre:!0,attrs:{class:"language-py"}},[n("code",[t._v("view"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run_command"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"goto_line"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"line"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nview"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run_command"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'insert_snippet'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"contents"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<$SELECTION>"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nview"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run_command"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"prompt_select_project"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("div",{staticClass:"custom-block seealso"},[n("p",{staticClass:"custom-block-title"},[t._v("See Also")]),n("p",[n("a",{attrs:{href:"/reference/commands"}},[t._v("Reference for commands")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);