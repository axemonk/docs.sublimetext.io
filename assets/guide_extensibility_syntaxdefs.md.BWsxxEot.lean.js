import{_ as r,C as t,c as i,o as c,a2 as o,j as e,a as n,G as a}from"./chunks/framework.CwCSXIY0.js";const k=JSON.parse('{"title":"Syntax Definitions","description":"","frontmatter":{"title":"Syntax Definitions"},"headers":[],"relativePath":"guide/extensibility/syntaxdefs.md","filePath":"guide/extensibility/syntaxdefs.md","lastUpdated":1738694335000}'),d={name:"guide/extensibility/syntaxdefs.md"},u={class:"tip custom-block"},m={class:"tip custom-block"},y={class:"tip custom-block"},b={class:"tip custom-block"},h={class:"tip custom-block"};function F(D,s,g,f,w,x){const l=t("Term"),p=t("Key");return c(),i("div",null,[s[41]||(s[41]=o("",8)),e("p",null,[s[0]||(s[0]=n("Sublime Text uses ")),s[1]||(s[1]=e("a",{href:"https://en.wikipedia.org/wiki/Property_list",target:"_blank",rel:"noreferrer"},"property list",-1)),s[2]||(s[2]=n(" (Plist) files to store syntax definitions. However, because editing XML files is a cumbersome task, we'll use ")),s[3]||(s[3]=e("a",{href:"https://en.wikipedia.org/wiki/YAML",target:"_blank",rel:"noreferrer"},"YAML",-1)),s[4]||(s[4]=n(" instead and convert it to Plist format afterwards. This is where the ")),a(l,{term:"package_dev"}),s[5]||(s[5]=n(" package (mentioned above) comes in."))]),e("div",u,[s[6]||(s[6]=e("p",{class:"custom-block-title"},"Note",-1)),s[7]||(s[7]=e("p",null,"If you experience unexpected errors during this tutorial, chances are",-1)),a(l,{term:"package_dev"}),s[8]||(s[8]=n(" or YAML is to blame. Don't immediately think your problem is")),s[9]||(s[9]=e("p",null,"due to a bug in Sublime Text.",-1))]),s[42]||(s[42]=o("",20)),e("div",m,[s[12]||(s[12]=e("p",{class:"custom-block-title"},"Note",-1)),e("p",null,[s[10]||(s[10]=n("Before continuing, make sure you've installed the ")),a(l,{term:"package_dev"}),s[11]||(s[11]=n(" package as explained above."))])]),s[43]||(s[43]=o("",24)),e("div",y,[s[17]||(s[17]=e("p",{class:"custom-block-title"},"Choosing the Right Scope Name",-1)),e("p",null,[s[13]||(s[13]=n("Naming scopes isn't obvious sometimes. Check the ")),s[14]||(s[14]=e("a",{href:"https://manual.macromates.com/en/language_grammars#naming_conventions",target:"_blank",rel:"noreferrer"},"Textmate naming conventions",-1)),s[15]||(s[15]=n(" for guidance on scope names. ")),a(l,{term:"package_dev"}),s[16]||(s[16]=n(" automatically provides completions for scope names according to these conventions. It is important to re-use the basic categories outlined there if you want to achieve the highest compatibility with existing colors."))]),s[18]||(s[18]=e("p",null,"Color schemes have hardcoded scope names in them. They could not possibly include every scope name you can think of, so they target the standard ones plus some rarer ones on occasion (like for CSS or Markdown). This means that two color schemes using the same syntax definition may render the text differently!",-1)),s[19]||(s[19]=e("p",null,[n("Bear in mind too that you should use the scope name that best suits your needs or preferences. It'd be perfectly fine to assign a scope like "),e("code",null,"constant.numeric"),n(" to anything other than a number if you have a good reason to do so.")],-1))]),s[44]||(s[44]=o("",5)),e("ul",null,[s[26]||(s[26]=e("li",null,[n("Make sure that "),e("code",null,"Automatic"),n(" is selected in "),e("strong",null,"Tools | Build System"),n(", or select "),e("code",null,"Convert to ..."),n(".")],-1)),e("li",null,[s[20]||(s[20]=n("Press ")),a(p,{k:"ctrl+b"}),s[21]||(s[21]=n(". A ")),s[22]||(s[22]=e("code",null,".tmLanguage",-1)),s[23]||(s[23]=n(" file will be generated for you in the same folder as your ")),s[24]||(s[24]=e("code",null,".YAML-tmLanguage",-1)),s[25]||(s[25]=n(" file."))]),s[27]||(s[27]=e("li",null,"Sublime Text will reload the changes to the syntax definition.",-1))]),e("p",null,[s[28]||(s[28]=n("In case you are wondering why ")),a(l,{term:"package_dev"}),s[29]||(s[29]=n(" knows what you want to convert your file to: It's specified in the first comment line."))]),s[45]||(s[45]=o("",9)),e("div",b,[s[36]||(s[36]=e("p",{class:"custom-block-title"},"Note",-1)),e("p",null,[s[30]||(s[30]=n("Writing ")),s[31]||(s[31]=e("code",null,"1",-1)),s[32]||(s[32]=n(" on a new line and pressing tab will autocomplete to ")),s[33]||(s[33]=e("code",null,"'1': {name: }",-1)),s[34]||(s[34]=n(" thanks to ")),a(l,{term:"package_dev"}),s[35]||(s[35]=n("."))])]),s[46]||(s[46]=o("",27)),e("div",h,[s[39]||(s[39]=e("p",{class:"custom-block-title"},"Note",-1)),e("p",null,[s[37]||(s[37]=n("If you previously used JSON for syntax definitions you are still able to do this because ")),a(l,{term:"package_dev"}),s[38]||(s[38]=n(" is backwards compatible."))]),s[40]||(s[40]=e("p",null,[n("If you want to consider switching to YAML (either from JSON or directly from Plist), it provides a command named "),e("code",null,"PackageDev: Convert to YAML and Rearrange Syntax Definition"),n(" which will automatically format the resulting YAML in a pleasurable way.")],-1))])])}const C=r(d,[["render",F]]);export{k as __pageData,C as default};
